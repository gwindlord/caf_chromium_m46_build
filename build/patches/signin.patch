diff --git a/chrome/android/java/res/xml/main_preferences.xml b/chrome/android/java/res/xml/main_preferences.xml
index 09f6c13..6734aef 100644
--- a/chrome/android/java/res/xml/main_preferences.xml
+++ b/chrome/android/java/res/xml/main_preferences.xml
@@ -5,12 +5,9 @@
 
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
 
-<!--
     <org.chromium.chrome.browser.preferences.SignInPreference
         android:key="sign_in"
         android:title="@string/sign_in_to_chrome" />
--->
-
     <PreferenceCategory
         android:layout="@layout/browser_preference_category_first"
         android:title="@string/prefs_section_basics"/>
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
index c382713..ea88fb8 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
@@ -714,7 +714,6 @@ public abstract class ChromeActivity extends BrowserChromeActivity
 
         // We want to refresh partner browser provider every onStart().
         mPartnerBrowserRefreshNeeded = true;
-
         if (mCompositorViewHolder != null) mCompositorViewHolder.onStop();
     }
 
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplication.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplication.java
index cc7e8c7..7bf7a97 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplication.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplication.java
@@ -25,7 +25,6 @@ import org.chromium.base.ApplicationState;
 import org.chromium.base.ApplicationStatus;
 import org.chromium.base.ApplicationStatus.ApplicationStateListener;
 import org.chromium.base.BuildInfo;
-import org.chromium.base.CommandLine;
 import org.chromium.base.PathUtils;
 import org.chromium.base.ResourceExtractor;
 import org.chromium.base.ThreadUtils;
@@ -501,20 +500,6 @@ public class ChromeApplication extends ContentApplication {
     public void initCommandLine() {
         // TODO(newt): delete this when deleting ChromeShell.
         ChromeCommandLineInitUtil.initChromeCommandLine(this);
-        if (CommandLine.getInstance().hasSwitch(ChromeSwitches.ENABLE_DEBUG_MODE)) {
-            Logger.enableVerboseLogging();
-        }
-        if (!CommandLine.getInstance().hasSwitch(
-                ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)) {
-            if (!CommandLine.getInstance().hasSwitch(ChromeSwitches.DISABLE_FIRST_RUN_EXPERIENCE)) {
-                CommandLine.getInstance().appendSwitch(ChromeSwitches.DISABLE_FIRST_RUN_EXPERIENCE);
-            }
-            if (!"0".equals(CommandLine.getInstance()
-                    .getSwitchValue(ChromeSwitches.ENABLE_ENHANCED_BOOKMARKS))) {
-                CommandLine.getInstance().
-                        appendSwitchWithValue(ChromeSwitches.ENABLE_ENHANCED_BOOKMARKS, "0");
-            }
-        }
         // SWE specific command line switches
         SWECommandLine.getInstance(this).initSWECommandLine();
     }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeSwitches.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeSwitches.java
index e7d8c20..6168c10 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeSwitches.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeSwitches.java
@@ -15,11 +15,6 @@ public abstract class ChromeSwitches {
     /** Testing: pretend that the switch value is the name of a child account. */
     public static final String CHILD_ACCOUNT = "child-account";
 
-    /** Testing: This will unblock the FRE and partner customizations as well as other
-     * UI that is related to SignIn */
-    public static final String ENABLE_SUPPRESSED_CHROMIUM_FEATURES =
-            "enable-suppressed-chromium-features";
-
     /** Sets WebDefender's default value to False */
     public static final String DEFAULT_DISABLE_WEB_DEFENDER = "disable-web-defender-by-default";
 
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/compositor/layouts/LayoutManagerDocument.java b/chrome/android/java/src/org/chromium/chrome/browser/compositor/layouts/LayoutManagerDocument.java
index 2079b9c..a5faf4c 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/compositor/layouts/LayoutManagerDocument.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/compositor/layouts/LayoutManagerDocument.java
@@ -12,9 +12,7 @@ import android.util.SparseArray;
 import android.view.MotionEvent;
 import android.view.ViewGroup;
 
-import org.chromium.base.CommandLine;
 import org.chromium.chrome.browser.ChromeApplication;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.browser.UrlConstants;
 import org.chromium.chrome.browser.compositor.bottombar.contextualsearch.ContextualSearchPanel;
 import org.chromium.chrome.browser.compositor.layouts.components.LayoutTab;
@@ -119,10 +117,7 @@ public class LayoutManagerDocument extends LayoutManager
         mGestureHandler = new GestureHandlerLayoutDelegate(this);
         mToolbarSwipeHandler = new ToolbarSwipeHandler(this);
 
-        if (!CommandLine.getInstance().hasSwitch(
-                ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)) {
-            mEdgeNavigationLayout = EdgeNavigationLayout.getNewLayout(context, this, renderHost);
-        }
+        mEdgeNavigationLayout = EdgeNavigationLayout.getNewLayout(context, this, renderHost);
 
         // Build Event Filters
         mStaticEdgeEventFilter =
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/document/ChromeLauncherActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/document/ChromeLauncherActivity.java
index 0674ce5..ef4057b 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/document/ChromeLauncherActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/document/ChromeLauncherActivity.java
@@ -27,10 +27,8 @@ import android.util.Log;
 
 import org.chromium.base.ApiCompatibilityUtils;
 import org.chromium.base.ApplicationStatus;
-import org.chromium.base.CommandLine;
 import org.chromium.base.TraceEvent;
 import org.chromium.chrome.browser.ChromeApplication;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.browser.ChromeTabbedActivity;
 import org.chromium.chrome.browser.IntentHandler;
 import org.chromium.chrome.browser.IntentHandler.TabOpenType;
@@ -149,8 +147,8 @@ public class ChromeLauncherActivity extends Activity
         // Read partner browser customizations information asynchronously.
         // We want to initialize early because when there is no tabs to restore, we should possibly
         // show homepage, which might require reading PartnerBrowserCustomizations provider.
-            PartnerBrowserCustomizations.initializeAsync(getApplicationContext(),
-                    PARTNER_BROWSER_CUSTOMIZATIONS_TIMEOUT_MS);
+        PartnerBrowserCustomizations.initializeAsync(getApplicationContext(),
+                PARTNER_BROWSER_CUSTOMIZATIONS_TIMEOUT_MS);
 
         mIsInMultiInstanceMode = MultiWindowUtils.getInstance().shouldRunInMultiInstanceMode(this);
         mIntentHandler = new IntentHandler(this, getPackageName());
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java b/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java
index 737048a..d33d469 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java
@@ -21,9 +21,7 @@ import android.widget.BaseExpandableListAdapter;
 import android.widget.TextView;
 
 import org.chromium.base.ApiCompatibilityUtils;
-import org.chromium.base.CommandLine;
 import org.chromium.chrome.R;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.browser.favicon.FaviconHelper.FaviconImageCallback;
 import org.chromium.chrome.browser.ntp.ForeignSessionHelper.ForeignSession;
 import org.chromium.chrome.browser.ntp.ForeignSessionHelper.ForeignSessionTab;
@@ -818,14 +816,11 @@ public class RecentTabsRowAdapter extends BaseExpandableListAdapter {
             addGroup(new CurrentlyOpenTabsGroup(tabList));
         }
         addGroup(mRecentlyClosedTabsGroup);
-        if (CommandLine.getInstance().hasSwitch(ChromeSwitches.
-                ENABLE_SUPPRESSED_CHROMIUM_FEATURES)) {
-            for (ForeignSession session : mRecentTabsManager.getForeignSessions()) {
-                addGroup(new ForeignSessionGroup(session));
-            }
-            if (mRecentTabsManager.shouldDisplaySyncPromo()) {
-                addGroup(new SyncPromoGroup());
-            }
+        for (ForeignSession session : mRecentTabsManager.getForeignSessions()) {
+            addGroup(new ForeignSessionGroup(session));
+        }
+        if (mRecentTabsManager.shouldDisplaySyncPromo()) {
+            addGroup(new SyncPromoGroup());
         }
 
         // Add separator line after the recently closed tabs group.
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/preferences/DocumentModeManager.java b/chrome/android/java/src/org/chromium/chrome/browser/preferences/DocumentModeManager.java
index af68178..c45339e 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/preferences/DocumentModeManager.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/preferences/DocumentModeManager.java
@@ -243,7 +243,7 @@ public class DocumentModeManager {
             if (isDeviceTabbedModeByDefault() && !hasMigrated) {
                 optOutState = OPTED_OUT_OF_DOCUMENT_MODE;
             } else {
-                optOutState = OPTED_OUT_OF_DOCUMENT_MODE; //Always opt out.
+                optOutState = OPT_IN_TO_DOCUMENT_MODE;
             }
             setOptedOutState(optOutState);
         }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/preferences/Preferences.java b/chrome/android/java/src/org/chromium/chrome/browser/preferences/Preferences.java
index c2fe316..4221e18 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/preferences/Preferences.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/preferences/Preferences.java
@@ -28,13 +28,11 @@ import android.view.MenuItem;
 import android.view.WindowManager;
 
 import org.chromium.base.ApiCompatibilityUtils;
-import org.chromium.base.CommandLine;
 import org.chromium.base.VisibleForTesting;
 import org.chromium.base.annotations.SuppressFBWarnings;
 import org.chromium.base.library_loader.ProcessInitException;
 import org.chromium.chrome.R;
 import org.chromium.chrome.browser.ChromeApplication;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.browser.help.HelpAndFeedback;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.preferences.privacy.PrivacyPreferencesManager;
@@ -237,13 +235,9 @@ public class Preferences extends AppCompatActivity implements
     public boolean onCreateOptionsMenu(Menu menu) {
         super.onCreateOptionsMenu(menu);
         // By default, every screen in Settings shows a "Help & feedback" menu item.
-        if(CommandLine.getInstance()
-                .hasSwitch(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)) {
-            MenuItem help = menu.add(
-                    Menu.NONE, R.id.menu_id_help_general, Menu.CATEGORY_SECONDARY, R.string.menu_help);
-            help.setIcon(R.drawable.ic_help_and_feedback);
-            return true;
-        }
+        MenuItem help = menu.add(
+                Menu.NONE, R.id.menu_id_help_general, Menu.CATEGORY_SECONDARY, R.string.menu_help);
+        help.setIcon(R.drawable.ic_help_and_feedback);
         return true;
     }
 
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/preferences/privacy/PrivacyPreferences.java b/chrome/android/java/src/org/chromium/chrome/browser/preferences/privacy/PrivacyPreferences.java
index 3fbed83..7d36731 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/preferences/privacy/PrivacyPreferences.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/preferences/privacy/PrivacyPreferences.java
@@ -16,9 +16,7 @@ import android.view.MenuItem;
 import android.content.Intent;
 import android.view.WindowManager;
 
-import org.chromium.base.CommandLine;
 import org.chromium.chrome.R;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.browser.contextualsearch.ContextualSearchFieldTrial;
 import org.chromium.chrome.browser.help.HelpAndFeedback;
 import org.chromium.chrome.browser.precache.PrecacheLauncher;
@@ -107,13 +105,7 @@ public class PrivacyPreferences extends BrowserPreferenceFragment
         ChromeBaseCheckBoxPreference uploadCrashDumpNoCellularPref =
                 (ChromeBaseCheckBoxPreference) findPreference(PREF_CRASH_DUMP_UPLOAD_NO_CELLULAR);
 
-        //Disable Chromium crash log dump setting
-        if(!CommandLine.getInstance()
-                .hasSwitch(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)) {
-            preferenceScreen.removePreference(uploadCrashDumpNoCellularPref);
-            preferenceScreen.removePreference(uploadCrashDumpPref);
-            preferenceScreen.removePreference(findPreference(PREF_USAGE_AND_CRASH_REPORTING));
-        } else if (privacyPrefManager.isCellularExperimentEnabled()) {
+        if (privacyPrefManager.isCellularExperimentEnabled()) {
             preferenceScreen.removePreference(uploadCrashDumpNoCellularPref);
             preferenceScreen.removePreference(uploadCrashDumpPref);
         } else {
@@ -347,12 +339,9 @@ public class PrivacyPreferences extends BrowserPreferenceFragment
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         menu.clear();
-        if(CommandLine.getInstance()
-                .hasSwitch(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)) {
-            MenuItem help = menu.add(
-                    Menu.NONE, R.id.menu_id_help_privacy, Menu.NONE, R.string.menu_help);
-            help.setIcon(R.drawable.ic_help_and_feedback);
-        }
+        MenuItem help = menu.add(
+                Menu.NONE, R.id.menu_id_help_privacy, Menu.NONE, R.string.menu_help);
+        help.setIcon(R.drawable.ic_help_and_feedback);
     }
 
     @Override
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/preferences/website/LanguagePreferences.java b/chrome/android/java/src/org/chromium/chrome/browser/preferences/website/LanguagePreferences.java
index 3ac67c8..4a2907d 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/preferences/website/LanguagePreferences.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/preferences/website/LanguagePreferences.java
@@ -12,9 +12,7 @@ import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
 
-import org.chromium.base.CommandLine;
 import org.chromium.chrome.R;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.browser.help.HelpAndFeedback;
 import org.chromium.chrome.browser.preferences.ChromeBaseCheckBoxPreference;
 import org.chromium.chrome.browser.preferences.ManagedPreferenceDelegate;
@@ -80,13 +78,10 @@ public class LanguagePreferences extends BrowserPreferenceFragment {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         menu.clear();
-        if(CommandLine.getInstance()
-                .hasSwitch(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)) {
-            MenuItem help = menu.add(
-                    Menu.NONE, R.id.menu_id_translate_help, Menu.NONE, R.string.menu_help);
-            help.setIcon(R.drawable.ic_help_and_feedback);
-            help.setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM);
-        }
+        MenuItem help = menu.add(
+                Menu.NONE, R.id.menu_id_translate_help, Menu.NONE, R.string.menu_help);
+        help.setIcon(R.drawable.ic_help_and_feedback);
+        help.setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM);
 
         MenuItem reset = menu.add(Menu.NONE, Menu.NONE, Menu.NONE,
                 R.string.reset_translate_defaults);
diff --git a/chrome/android/javatests/src/org/chromium/chrome/browser/enhancedbookmarks/EnhancedBookmarkTest.java b/chrome/android/javatests/src/org/chromium/chrome/browser/enhancedbookmarks/EnhancedBookmarkTest.java
index 80ebe3d..2b83654 100644
--- a/chrome/android/javatests/src/org/chromium/chrome/browser/enhancedbookmarks/EnhancedBookmarkTest.java
+++ b/chrome/android/javatests/src/org/chromium/chrome/browser/enhancedbookmarks/EnhancedBookmarkTest.java
@@ -36,10 +36,7 @@ import java.util.concurrent.TimeoutException;
 /**
  * Tests for the enhanced bookmark manager.
  */
-@CommandLineFlags.Add({
-    ChromeSwitches.ENABLE_ENHANCED_BOOKMARKS + "=1",
-    ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES
-})
+@CommandLineFlags.Add(ChromeSwitches.ENABLE_ENHANCED_BOOKMARKS + "=1")
 public class EnhancedBookmarkTest extends ChromeActivityTestCaseBase<ChromeActivity> {
 
     public EnhancedBookmarkTest() {
diff --git a/chrome/android/javatests/src/org/chromium/chrome/browser/enhancedbookmarks/EnhancedBookmarksModelTest.java b/chrome/android/javatests/src/org/chromium/chrome/browser/enhancedbookmarks/EnhancedBookmarksModelTest.java
index 4fde64b..edc02bb 100644
--- a/chrome/android/javatests/src/org/chromium/chrome/browser/enhancedbookmarks/EnhancedBookmarksModelTest.java
+++ b/chrome/android/javatests/src/org/chromium/chrome/browser/enhancedbookmarks/EnhancedBookmarksModelTest.java
@@ -32,10 +32,6 @@ import java.util.concurrent.atomic.AtomicReference;
 /**
  * Tests for {@link EnhancedBookmarksModel}, the data layer of Enhanced Bookmarks.
  */
-@CommandLineFlags.Add({
-    ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES,
-    ChromeSwitches.ENABLE_ENHANCED_BOOKMARKS + "=1"
-})
 public class EnhancedBookmarksModelTest extends NativeLibraryTestBase {
     private static final int TIMEOUT_MS = 5000;
     private EnhancedBookmarksModel mBookmarksModel;
diff --git a/chrome/android/javatests/src/org/chromium/chrome/browser/partnercustomizations/PartnerDisableIncognitoModeIntegrationTest.java b/chrome/android/javatests/src/org/chromium/chrome/browser/partnercustomizations/PartnerDisableIncognitoModeIntegrationTest.java
index ce745bb..a430ee7 100644
--- a/chrome/android/javatests/src/org/chromium/chrome/browser/partnercustomizations/PartnerDisableIncognitoModeIntegrationTest.java
+++ b/chrome/android/javatests/src/org/chromium/chrome/browser/partnercustomizations/PartnerDisableIncognitoModeIntegrationTest.java
@@ -20,8 +20,6 @@ import org.chromium.chrome.test.partnercustomizations.TestPartnerBrowserCustomiz
 import org.chromium.chrome.test.util.TestHttpServerClient;
 import org.chromium.content.browser.test.util.Criteria;
 import org.chromium.content.browser.test.util.CriteriaHelper;
-import org.chromium.base.test.util.CommandLineFlags;
-import org.chromium.chrome.browser.ChromeSwitches;
 
 import java.util.concurrent.Callable;
 import java.util.concurrent.ExecutionException;
@@ -29,7 +27,6 @@ import java.util.concurrent.ExecutionException;
 /**
  * Integration tests for the partner disabling incognito mode feature.
  */
-@CommandLineFlags.Add(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)
 public class PartnerDisableIncognitoModeIntegrationTest extends
         BasePartnerBrowserCustomizationIntegrationTest {
 
diff --git a/chrome/android/javatests/src/org/chromium/chrome/browser/partnercustomizations/PartnerHomepageIntegrationTest.java b/chrome/android/javatests/src/org/chromium/chrome/browser/partnercustomizations/PartnerHomepageIntegrationTest.java
index c23a8e5..98676f7 100644
--- a/chrome/android/javatests/src/org/chromium/chrome/browser/partnercustomizations/PartnerHomepageIntegrationTest.java
+++ b/chrome/android/javatests/src/org/chromium/chrome/browser/partnercustomizations/PartnerHomepageIntegrationTest.java
@@ -42,7 +42,6 @@ import java.util.concurrent.TimeoutException;
 /**
  * Integration test suite for partner homepage.
  */
-@CommandLineFlags.Add(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)
 public class PartnerHomepageIntegrationTest extends BasePartnerBrowserCustomizationIntegrationTest {
     private static final String TEST_URL =
             TestHttpServerClient.getUrl("chrome/test/data/android/about.html");
diff --git a/chrome/android/javatests/src/org/chromium/chrome/browser/toolbar/BrandColorTest.java b/chrome/android/javatests/src/org/chromium/chrome/browser/toolbar/BrandColorTest.java
index 5e835dd..8c313f2 100644
--- a/chrome/android/javatests/src/org/chromium/chrome/browser/toolbar/BrandColorTest.java
+++ b/chrome/android/javatests/src/org/chromium/chrome/browser/toolbar/BrandColorTest.java
@@ -9,11 +9,9 @@ import android.test.suitebuilder.annotation.SmallTest;
 import android.text.TextUtils;
 
 import org.chromium.base.ThreadUtils;
-import org.chromium.base.test.util.CommandLineFlags;
 import org.chromium.base.test.util.Feature;
 import org.chromium.base.test.util.UrlUtils;
 import org.chromium.chrome.R;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.test.DocumentActivityTestBase;
 import org.chromium.chrome.test.util.DisableInTabbedMode;
 import org.chromium.content.browser.InterstitialPageDelegateAndroid;
@@ -26,7 +24,6 @@ import java.util.concurrent.Callable;
  * Contains tests for the brand color feature.
  */
 @DisableInTabbedMode
-@CommandLineFlags.Add(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)
 public class BrandColorTest extends DocumentActivityTestBase {
     private static final String BRAND_COLOR_1 = "#482329";
     private static final String BRAND_COLOR_2 = "#505050";
